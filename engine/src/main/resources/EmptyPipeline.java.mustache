package de.hpi.des.hdes.engine.temp;

import de.hpi.des.hdes.engine.execution.Dispatcher;
import java.nio.ByteBuffer;

public class {{{className}}} {
  private final ByteBuffer input;
  {{#hasChild}}
  private final Dispatcher dispatcher;
  private final byte[] output = new byte[{{{tupleLength}}}];
  private final ByteBuffer outputBuffer = ByteBuffer.wrap(output);
  {{/hasChild}}

  {{#interfaces}}
  {{> InterfaceDefinition.java.mustache}}
  {{/interfaces}}
  
  public {{{className}}}(final ByteBuffer input{{#hasChild}}, final Dispatcher dispacther{{/hasChild}}) {
    this.input = input;
    {{#hasChild}}
    this.dispatcher = dispatcher;
    {{/hasChild}}
  }

  public void processEvent(int offset){
    input.position(offset);
    input.mark();
    {{#variables}}
    {{> VariableDefiniton.java.mustache}}
    {{/variables}}
    {{{implementation}}}
  }  
}
